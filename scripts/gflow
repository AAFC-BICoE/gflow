#! /usr/bin/env python


import argparse
import sys
import logging
import logging.config
from gflow.GalaxyCMDWorkflow import GalaxyCMDWorkflow
from yaml import parser

logging.config.fileConfig('logging.ini')


TEMP_WF = False


def parse_options():
    """
    Get the location of the config file from the command line.

    Returns:
        configfile (str): The file location parsed from the command line.
    """
    parser = argparse.ArgumentParser()
    parser.add_argument("configfile", type=str,
                        help="config file with parameters")
    parser.add_argument('-w', "--tempwf", action="store_true",
                        help="do not save imported workflow to Galaxy")
    parser.add_argument("-v", "--verbose", action="store_true",
                        help="increase output verbosity")
    args = parser.parse_args()
    if args.tempwf:
        global TEMP_WF
        TEMP_WF = True
    if args.verbose:
        logger = logging.getLogger('gflow.GalaxyCMDWorkflow')
        ch = logging.StreamHandler()
        ch.setLevel(logging.DEBUG)
        ch_formatter = logging.Formatter('%(name)s - %(levelname)s: %(message)s')
        ch.setFormatter(ch_formatter)
        logger.addHandler(ch)
    return args.configfile


def print_usage(outstream):
    """
    Print usage when no config file is given or user users help flag.

    Args:
        outstream: Where to print the usage to.
    Returns:
        None
    """
    usage = ("Usage: gflow [options] config.txt\n"
             "  Options:\n"
             "    -h|--help           print this help message and exit")
    print >> outstream, usage
    return


def main():
    configfile = parse_options()
    try:
        gflow = GalaxyCMDWorkflow.init_from_config_file(configfile)
    except (ValueError, RuntimeError, KeyError, parser.ParserError):
        sys.exit(1)
    try:
        gflow.run(TEMP_WF)
    except (ValueError, RuntimeError, KeyError):
        sys.exit(1)
    except IOError:
        sys.exit(2)

if __name__ == '__main__':
    sys.exit(main())
